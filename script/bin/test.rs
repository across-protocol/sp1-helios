use alloy_primitives::{address, b256, uint, Address, Bytes, B256, U256};
use alloy_trie::TrieAccount;
use anyhow::Result;
use clap::{command, Parser};
use helios_ethereum::rpc::ConsensusRpc;
use sp1_helios_primitives::types::{ContractStorage, ProofInputs, StorageSlot};
use sp1_helios_script::{get_checkpoint, get_client, get_latest_checkpoint, get_updates};
use sp1_sdk::{utils::setup_logger, ProverClient, SP1Stdin};
use std::str::FromStr;

const ELF: &[u8] = include_bytes!("../../elf/sp1-helios-elf");
#[derive(Parser, Debug, Clone)]
#[command(about = "Get the genesis parameters from a block.")]
pub struct GenesisArgs {
    #[arg(long)]
    pub slot: Option<u64>,
}

#[tokio::main]
async fn main() -> Result<()> {
    dotenv::dotenv().ok();
    setup_logger();
    let args = GenesisArgs::parse();

    // Get the current slot from the contract or fetch the latest checkpoint
    let checkpoint = if let Some(slot) = args.slot {
        get_checkpoint(slot).await
    } else {
        get_latest_checkpoint().await
    };

    // Setup client.
    let helios_client = get_client(checkpoint).await;
    let sync_committee_updates = get_updates(&helios_client).await;
    let finality_update = helios_client.rpc.get_finality_update().await.unwrap();

    let expected_current_slot = helios_client.expected_current_slot();
    let inputs = ProofInputs {
        sync_committee_updates,
        finality_update,
        expected_current_slot,
        store: helios_client.store.clone(),
        genesis_root: helios_client.config.chain.genesis_root,
        forks: helios_client.config.forks.clone(),
        contract_storage_slots: ContractStorage {
            address: address!("0xcf340c078e4909f1796b28a78f35db9d60842cfb"),
            expected_value: TrieAccount {
                nonce: 1,
                balance: U256::from(0_u64), //(0_U256),
                storage_root: B256::from_str("83ce52fe93dc40b516aae3063fb9555ac0d6869c82101453a1afc548945dd1e7").unwrap(),
                code_hash: B256::from_str("31c3df91af020173d116583cc2fa374bf97e83e6d0b14f346b7071117a2c8d87").unwrap(),
            },
            mpt_proof: vec![
                Bytes::from_str("0xf90211a0079088d50f0332f032c4757d1a8922a93e920349fa063b6a5a3c57406479e8cea0f760c4195da6a69eb98473e5e3e2012259a10459b19ce479786683d480017369a0eb84b2b231e500f3b63ff7d09f18449b1824f2eedd8a6ffc38322b8501307a34a021e16c6fef0955e552bc53756f5301723765c8b5dbaccdad68955cb48dc40568a0d297bfa6cac4d63da3972b4c14d35c33edbc3cc3ec7b0f59ee626e478edce140a0102fe9a7a42f0a4bc89161fcce883ae398618192355a9572d9ac4153e8764f34a0c565eeac427c6f3f02796dadac3bbeecb921764e56f7b12303368f3d0179590ca06902d079aacb48be8848a1feb7d59751195319c6173f9591d9b6aa8d80c28bf2a084cb54ba0b562784f166508c86207942777a80c24c33a8ec73d73a0cd02f6c55a082f7d5c769fa8d80dcaeb7035da165ab6a5caea1fcb06b40684aae4bfaa6a20da025fac5460200634f83f76448225a902465be2cf59a9049c107b95f828b82b10ea057bf25e666b70d6a6872aefd3815d3124fb9deb8dfa6eb9663d0e5061876b55ea0826e0bff3d06089359774bfebe4c4e7d44aaf02e8c117a6176202b0c4a89811da0c29499c386c3a645c35f735694eebfba17330a11e052260705169a9ca713251ca0c393d1760118538e463a49330a36d0e3bd430e72c653b83faa5b9626dc61ffcba08aaa239f3e4f463bf56f670016070ae9ffdde1c2d063a33f3f42eee807b5ef7f80").unwrap(),
                Bytes::from_str("0xf90211a050eaba5b3adcd70ea7c65658985ea28e750102875ed786987314fbf3d74bb809a04a626de24e43aef7c79898001921fbccae5aa01064fafbb165fa841ebedfc0b4a0eae4d3f6469cca2462332cd4ceb4b12ca42fb79d884dc8e8e18fdd926e04a3f4a0bdea9136a80ca700da49fed629a27f3305ff3686d5d5f76cd35e2219dfdb924ea0955acb1605321c9f578f3d31d6727918d2da017fb42abf0780e07c50710221d2a0b8db19f925a03eac6382e66833fd17f50252a93cd7f5ba675431114eef450dc1a07fdaf13a7a344277f3c6d86a701dc61cbd8bbfafb10162afd0e13049fe8f5adaa08d21cc06caec7d01f79205d96d27338924a839d3a0af2c520f936aca4afff922a0d07b0de8e6f3936386f317989037ad781b93a3098aa7c01e2a63282af3ead1bea09cea0a695033da8a534ab3bbbeb442f35873bd0f28ade0d98fb0cf78f7b34235a078f21444e3da182add8c9ebf8b7a4e863a1e1f4f8830af3ec8fa83cde62ebe76a0f15149d22c75f441bbff5da9b20e7b9e3926fa0266f172ef065053bde2ec2c58a04e68e2605245b19605e12ddad4d3c0a9d519eee4dabe7f449c8722d96008d5a5a07cd59ea403cf1e1e133dd5d4091390b04c040e1cde407a6d367daa74056d9fdca08840c21aa02547a27611599f61c5f10b31493698b0b5e720efdc2572adafc1bca0bd18da10fe04f57b65b87877d625440cf3d6ae4827812335e95cbac660556b7b80").unwrap(),
                Bytes::from_str("0xf90211a07f4517ce742e452e2c306d480733daf9c42e3ae6d357a00ca67f6b55db17d119a0f56b308d9ae15b1444f7a68da406c47fbc84d7877dff7033333cc0470800fda6a055944a5fd8e3d82f5b26b53a0db5107efa4cd55ae3b67dbf2143a2a2ef3c48fba08c43c2976d5b8c734064b2c3342cf16c0e3178a77b78966f945b9c879f4ce408a0ed030e7a1bf32a2f5591f77eff662afd5245f390cb5031a8f2c4c596d3554104a0f9e6d212595e76c63cf6eb0a8647f709eaa74aa86ae5d93fa6a34d5a4735acbfa0c1168ea52c37f475343722d6fcc885a2e3b000a32184558243bf2deb31e73455a02e9fa85ac5526aee06a8416f7f4e7ee12d4ae56f68d3fbcb5903c69bba4122e7a0723be18887ae9950dd689a69c5cb5c1972ff964bf9705ca7aa51d57126d35e94a08d9107d6f2dd27c6eed413ba1b888f973eedad5c4592c0e485ca3c91c81aa484a0db06b7950f812c0ce678ac42d0deccd1caf8348ba077bcb96469cdfbe3b14073a0acaec5c5d132351d475e239da2c6b13bf2f370f89df478ed92574b1d38c63701a03fa34b50bcf8cc9e3c3a9b826a25293dedadeb42c7b7517df0cb96ea9e82a3d9a0e1291951d13af0e261ea77cce9a00126e9be46dbc1f29c3bdd735f017cfbe687a040c25a0169090007cb34c11d443a05ab0162244625eae910992033dd029f8a05a05f0843c908aba963a0adaa3927442bbf30b318e425dd0d49f990459806be908e80").unwrap(),
                Bytes::from_str("0xf90211a07446f421aba80ef18ab60801675390bfb9109c579eb491b1cfa885195d75b9b7a006230649d3df6ddc98ece40a065e48aabf3627e2cb7586518b2953d5da94318ba0ad9733976ee47e85ba920c4a3417b23ff1472caddbd5f36067a91c1378c3cb9ba0202d0f3b9def2595fffb7d6b372f139dbb288686cb2289b97508b425f051dceca02d567f919b5c310f55ee9bd7891415c0ed6f53825c23ea5291c8e7bcf1dbb414a07ae1187d3c3c4527d309a46ddf16b281357f81f59718aa316b15b46dbcc2c88ca037962f5650abc84e37796f1a4df26a432e948d56cada73af230423f15faf48e4a0f53d066031f56d70f09142aab9469e259ce7a3df11eb7cb489fd4bb0259cf35aa0c819e34a95cd5005977a0439262940d74d6f13c56a80f45b6c40cc668c245608a0cbc0546d6fce876c792ed7d01f582c6b2abe381912e8c98e6347277113c519a4a0d85cb552e2652f7a1839676693dabe3cc7ed03dccc8c5337895d5f2a9d420650a055e412a434b245ed6b3350203847e17f564cc8806d8d6f0708aafc8c68621e8fa000b10adcae79fe6ae047503c396c16d99067b2bd371234337028370de668e668a0a99b320b0341d6feef00ebddf6c56e49f444a0dc1a9ec17d1739ce736f5f5eefa0ddf1477eacd3711a4fb8c97798c7f92a2db9f97ddba8fc875595831edc04a462a0a1c66973fcb194f0bbe17330f05b4e014a8bd8e5c7639440d18e59708cbe34f680").unwrap(),
                Bytes::from_str("0xf90211a04d16ea4be155923b1e99b8ee5b1105980c70007a4fecd3b33071808745442db0a05de56c362b052d19e355099ff3340de9939429d162128a459e635d8cb4d72296a0851446dcbcc55182a8332656ebc91d90ba3d8fdd2e8e71a6ce0fbf21b7457e68a05d66f5812389c87621245ac96a92309c0c92954f7574efb2564959ad86b571d6a0ebfe4006f38073c86127e0a38a94c22be95d149ab6cf1884053a357c691c3e34a05bd526e42fa42aa4815eeabc4f0934537e1f901230eee99295ae519f34674e95a08c02f7b3ba5437cb6fc6524d6876097aa59b71eba4d05a2e1c8ce76212c8a009a04723d6c189f8a2638c386d828a258f3d77f04d884d94c083051322cbab056381a09eed181d601ecaa05c7b5b4fbfb70c31ceeb9297c1ea8c002a242bb24b8e60a7a093459935c5eb33cbfd3dbc445b0431d95ca2c8fb1e105cfb8c9ab4159820d246a04d7c31960b62cf6fd949856814c8f8a83fa1edf7884fb46a03f2fcf38397748fa060d7f49ba394e35e3333a2286b898f2a6e822dd1ddf718574a046bc5ac882481a0d03d56b77122289ad55e04ad4f55d043b379fc4a21dac2d0af4913580c17860ba072670728f352fc70b303d612a00e64fb1da2aeb54bbf9dec723ad38c2465e15fa0be669322d62513ca36cf976905240dd257764ead6175123327e9e02ec932fef9a0ec1430e2ff1a488baa7c3c6ee01edcc46c662c4d27867acbfd271a1b65867c7c80").unwrap(),
                Bytes::from_str("0xf90211a0878398a1e5e7eba715bb81b727a36c7a8968e50e4743d0280e272db07ace350ea0823cba4a0c855c688bf7cad3fa2402e856dacfc26875def90f8eae2e2d8d9457a0d0e5883f0d513edf45463a0ed4c99f0452211c5460cf2a8fb568ac5659b683aca06aa5ef36377ce933436e8761eb41b83650b42d11a7e8d38d4974bd311acae0f0a0b3ededbc64a31914ffdb4372b7ee773c7c8b7384936d7eb5aad8fd8f5aa31df3a0320b7b57e871f0ce255735899a562892d758261b68db1ca8551064940d7ec329a0d9b9c72d01bbecd1cb1b148e12bfb377f1255bc14ea34b4ecafcdd350096611aa056263ebbba427d925fd8716dfbeaef637848d427d09fdf49bc9d80ca0d1ec268a0ed49e636516a68517eed3a7000df6b83b9dbf8ad7e97f885863127c2a0f39b08a0dcfe35e90c003397dc9977ace011612a6e9ddd967b18d76e7aa56f1e41f295eba0989375ae6625a6a3a2cca681ca577920cacb00c7997e60d99c052d28e89879e0a010227aa001900e1821059e21cadfc83f8509550f8c1acf2e37b49b1f43d7744ca031ff0d9001380407a824d518466a99fae9445210dc6be04ee741a170fe68617ba0d17f9a2dc2c89389e08e277b2efd50c05cfbe59a549f0b6dad1c065123729c59a0f0922904a8ca9f5cde28dd0f06c2d392a8c8b16c2dfd74dfc97562b5b0f74bd0a0cdcb5fb0b5ad532644e293e077118ca04a212c31d6feee081f66e7206154213d80").unwrap(),
                Bytes::from_str("0xf87180808080808080a00c83f9c0c86a8709098897da0277e3be694e1a4f194498dee554bff8fceb17b6a0957d2cfe3472263151cb8fac0f55fa26e56e95a3eeb59f692abff2f7ba91e76480808080a041339d4aa3586b90014f98213e6d1060bdbc5177deb7a24e1a2238ba7330c040808080").unwrap(),
                Bytes::from_str("0xf8669d35db4c6e3b7b8968ccf4fed9d06dc8a04d6853b5faa3c9aa38e08ab8fcb846f8440180a083ce52fe93dc40b516aae3063fb9555ac0d6869c82101453a1afc548945dd1e7a031c3df91af020173d116583cc2fa374bf97e83e6d0b14f346b7071117a2c8d87").unwrap()
            ],
            storage_slots: vec![
                StorageSlot {
                    key: B256::from_str("0000000000000000000000000000000000000000000000000000000000000000").unwrap(),
                    expected_value: B256::from_str("9a8f92a830a5cb89a3816e3d267cb7791c16b04d000000000000000000000000").unwrap(),
                    mpt_proof: vec![
                        Bytes::from_str("0xf838a120290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56395949a8f92a830a5cb89a3816e3d267cb7791c16b04d").unwrap()
                    ],
                }
            ],
        },
    };

    // Write the inputs to the VM
    let mut stdin = SP1Stdin::new();
    stdin.write_slice(&serde_cbor::to_vec(&inputs)?);

    let prover_client = ProverClient::builder().cpu().build();
    let (_, report) = prover_client.execute(ELF, &stdin).run()?;
    println!("Execution Report: {:?}", report);

    Ok(())
}
